<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.4.1">
  <actions/>
  <description>This Job is intended to run the Robot Test Suite against the NMaaPublic cloud deployment on AWS. &#xd;
&#xd;
The Job is run after the successful completion of the below job: &#xd;
NEMESIS_resources_plan_apply_Healthcheck</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@50.0.6">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>7</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty plugin="eiffel-core@50.0.6">
      <sequentialLinkingEnabled>false</sequentialLinkingEnabled>
    </com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty plugin="eiffel-core@50.0.6">
      <messagingEnabled>false</messagingEnabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@50.0.6">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SSH_USER</name>
          <description>SSH User to clone the Gerrit repos</description>
          <defaultValue>ehraole</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EKS_CLUSTER</name>
          <description>Name of the EKS Cluster created by the Deployment Job</description>
          <defaultValue>enm-production-jenkins-cluster</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLIC_CLOUD_INTERFACE_IMAGE</name>
          <description>Which public-cloud-interface image to pull and use.</description>
          <defaultValue>armdocker.rnd.ericsson.se/proj-nmaas-pub/prod/public-cloud-interface:latest</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JOB_CONTAINER</name>
          <description>Name of the container spinned up from PCI Image for running the tests</description>
          <defaultValue>NEMESIS_public_cloud_deployment_tests_$BUILD_NUMBER</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.ericsson.duraci.messaging.UserDomainSuffixJobProperty plugin="eiffel-core@50.0.6">
      <enabled>false</enabled>
      <userDomainSuffix></userDomainSuffix>
    </com.ericsson.duraci.messaging.UserDomainSuffixJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>nemesis</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>NEMESIS_resources_plan_apply_Healthcheck</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>nemesis</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &apos;#######GENERATING THE TOKEN FOR ECR IMAGE PULL#######&apos;
token=$(aws ecr get-login --no-include-email)
$token</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo  &apos;#######CLONE FROM DEPLOYMENT TESTS REPO#######&apos;

git clone https://$SSH_USER@gerrit.ericsson.se/ENMaaS/enm-public-cloud/deployment-tests.git



echo &apos;#######PULL LATEST PCI IMAGE#######&apos;

docker pull $PUBLIC_CLOUD_INTERFACE_IMAGE

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &apos;#######CREATE AND RUN TEST CONTAINER#######&apos;



docker run -d -it -v /home/jenkins-nemesis/.aws:/root/.aws --name $JOB_CONTAINER $PUBLIC_CLOUD_INTERFACE_IMAGE




echo &apos;#######COPYING TEST-REPO INTO CONTAINER#######&apos;

docker cp deployment-tests/ $JOB_CONTAINER:/root



echo &apos;#######INSTALLING PACKAGES REQUIRED FOR TESTS#######&apos;

docker exec $JOB_CONTAINER bash -c &quot;cd /root/deployment-tests &amp;&amp; pip3 install -e .&quot;




echo &apos;#######GET THE KUBECONFIG FILE AND ADD TO DIRECTORY#######&apos;


docker exec $JOB_CONTAINER aws eks update-kubeconfig --name $EKS_CLUSTER

docker exec $JOB_CONTAINER install -C -o root -g root /root/.kube/config /root/terraform-templates/aws/environments/production/enm/kubeconfig-$EKS_CLUSTER.yaml


echo &apos;#######UPDATING THE TERRAFORM TF VARS FILE#######&apos;


docker exec $JOB_CONTAINER terraform_wrapper --operation plan --provider aws --component enm --input_file input.json

echo &apos;#######RUNNING THE TESTS#######&apos;

docker exec $JOB_CONTAINER bash -c &quot;cd /root/deployment-tests &amp;&amp; mkdir output &amp;&amp; PYTHONPATH=. robot --outputdir output --loglevel INFO tests&quot;




echo &apos;#######FETCHING THE RESULTS LOCALLY#######&apos;

mkdir -p /home/jenkins-nemesis/robotresults/$BUILD_NUMBER

docker cp $JOB_CONTAINER:/root/deployment-tests/output /home/jenkins-nemesis/robotresults/$BUILD_NUMBER


</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># This snippet should be the last one in the jenkins job.

echo &quot;&quot;
echo &quot;### Stop and remove used container. ###&quot;
docker ps -a
docker images
echo &quot;&quot;

docker stop $JOB_CONTAINER
docker rm $JOB_CONTAINER

echo &quot;&quot;
docker ps -a
docker images
echo &quot;&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.robot.RobotPublisher plugin="robot@1.6.4">
      <outputPath>/home/jenkins-nemesis/robotresults/$BUILD_NUMBER/output</outputPath>
      <reportFileName>report.html</reportFileName>
      <logFileName>log.html</logFileName>
      <outputFileName>output.xml</outputFileName>
      <disableArchiveOutput>false</disableArchiveOutput>
      <passThreshold>100.0</passThreshold>
      <unstableThreshold>90.0</unstableThreshold>
      <otherFiles>
        <string></string>
      </otherFiles>
      <enableCache>true</enableCache>
      <onlyCritical>false</onlyCritical>
    </hudson.plugins.robot.RobotPublisher>
    <hudson.tasks.Mailer plugin="mailer@1.23">
      <recipients></recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
  <childCustomWorkspace>${COMBINATION}/${BUILD_NUMBER}</childCustomWorkspace>
</matrix-project>